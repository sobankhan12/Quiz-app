[{"D:\\BOOTCAMP\\quizz-app1\\src\\App.tsx":"1","D:\\BOOTCAMP\\quizz-app1\\src\\Components\\QuestionCard.tsx":"2","D:\\BOOTCAMP\\quizz-app1\\src\\reportWebVitals.ts":"3","D:\\BOOTCAMP\\quizz-app1\\src\\API\\quiz_api.tsx":"4","D:\\BOOTCAMP\\quizz-app1\\src\\Types\\QuizTypes.tsx":"5","D:\\BOOTCAMP\\quizz-app1\\src\\index.tsx":"6","D:\\BOOTCAMP\\quizz-app1\\src\\Components\\QuestionCard.styles.ts":"7","D:\\BOOTCAMP\\quizz-app1\\src\\App.styles.ts":"8"},{"size":2823,"mtime":1606972215254,"results":"9","hashOfConfig":"10"},{"size":1149,"mtime":1606976470295,"results":"11","hashOfConfig":"10"},{"size":425,"mtime":1606195597581,"results":"12","hashOfConfig":"10"},{"size":555,"mtime":1606886945990,"results":"13","hashOfConfig":"10"},{"size":517,"mtime":1606887065617,"results":"14","hashOfConfig":"10"},{"size":500,"mtime":1606195597581,"results":"15","hashOfConfig":"10"},{"size":1103,"mtime":1606975657925,"results":"16","hashOfConfig":"10"},{"size":1391,"mtime":1606971671653,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"16yh4o8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\BOOTCAMP\\quizz-app1\\src\\App.tsx",["37"],"import React,{useState} from 'react';\nimport{Difficulty,QuestionState,QuestionCardTypes} from './Types/QuizTypes'\nimport {GlobalStyle,Wrapper} from './App.styles';\nimport QuestionCard from './Components/QuestionCard';\nimport {fetchQuestion} from './API/quiz_api'\nconst TOTAL_QUESTION=10;\ntype AnswerObject={\n  question:string;\n  answer:string;\n  correctAnswer:string;\n  correct:boolean;\n  // options:string[];\n}\nfunction App() {\n  const[loading,setLoading]=useState(false);\n  const [questions,setQuestions]=useState<QuestionState[]>([])\n  const [number,setNumber]=useState(0);\n  const [gameOver,setGameOver]=useState(true);\n  const [userAnswer,setUserAnswer]=useState<AnswerObject[]>([])\n  const [score,setScore]=useState(0)\n  console.log(questions);\n  \n  const startQuiz=async()=>{\n    setLoading(true)\n    setGameOver(false)\n    const nextQuestions=await fetchQuestion(10,Difficulty.EASY)\n    setQuestions(nextQuestions);\n    setScore(0)\n    setUserAnswer([])\n    setNumber(0)\n    setLoading(false)\n  }\n  const nextQuestion=async()=>{\n    const nextQuestion=number+1;\n    if(nextQuestion===TOTAL_QUESTION){\n      setGameOver(true)\n    }else{\n      setNumber(nextQuestion)\n    }\n  \n  }\n  \n  \n  \n  const checkAnswer=(e:React.MouseEvent<HTMLButtonElement>)=>{\n    if(!gameOver){\n      const answer=e.currentTarget.value;\n      const correct=questions[number].correct_answer===answer;\n      if (correct)setScore(prev=>prev+1)\n      const answerObject={\n        question:questions[number].question,\n        answer,\n        correct,\n        correctAnswer:questions[number].correct_answer,\n        // options:[...questions[number].incorrect_answers]\n      }\n      setUserAnswer(prev=>[...prev,answerObject])\n\n    }\n  }\n  return (\n    <>\n    <GlobalStyle/>\n    <Wrapper>\n          <h1 className=\"heading\">React Quiz</h1>\n          {gameOver || userAnswer.length===TOTAL_QUESTION? (\n            <button className=\"start\" onClick={startQuiz}>Start Quiz</button>\n          ):null }\n          {!gameOver? (\n            <p className=\"score\">Score:{score}</p>\n          ):null}\n          {\n            loading? (\n<p className=\"loading\">Loading....</p>\n            ):null\n          }\n          {!gameOver && !loading? (\n            <QuestionCard \n            question={questions[number].question}\n            questionNumber={number+1}\n            totalQuestion={TOTAL_QUESTION}\n            \n            answers={questions[number].answers}\n            userAnswer={userAnswer? userAnswer[number]:undefined}\n            callback={checkAnswer}\n           />\n          ):null}\n           {!gameOver && !loading && userAnswer.length===number+1 && number !==TOTAL_QUESTION-1? (\n             <button className=\"next\" onClick={nextQuestion}>Next Question</button>\n           ):null}\n          \n    </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","D:\\BOOTCAMP\\quizz-app1\\src\\Components\\QuestionCard.tsx",[],"D:\\BOOTCAMP\\quizz-app1\\src\\reportWebVitals.ts",[],["38","39"],"D:\\BOOTCAMP\\quizz-app1\\src\\API\\quiz_api.tsx",[],"D:\\BOOTCAMP\\quizz-app1\\src\\Types\\QuizTypes.tsx",[],["40","41"],"D:\\BOOTCAMP\\quizz-app1\\src\\index.tsx",[],"D:\\BOOTCAMP\\quizz-app1\\src\\Components\\QuestionCard.styles.ts",[],"D:\\BOOTCAMP\\quizz-app1\\src\\App.styles.ts",[],{"ruleId":"42","severity":1,"message":"43","line":2,"column":33,"nodeType":"44","messageId":"45","endLine":2,"endColumn":50},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},"@typescript-eslint/no-unused-vars","'QuestionCardTypes' is defined but never used.","Identifier","unusedVar","no-native-reassign",["52"],"no-negated-in-lhs",["53"],["52"],["53"],"no-global-assign","no-unsafe-negation"]